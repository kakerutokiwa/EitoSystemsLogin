/* Reset Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Body Styling */
body {
  background-color: black;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  color: #00ffff;
  font-family: Arial, sans-serif;
  text-align: center;
}

/* Main Container (Outer Border) */
.container {
  position: relative;
  width: 400px; /* 外枠を広げる */
  padding: 20px;
  background-color: black;
  margin: 0 auto;
  border: 3px solid rgba(0, 255, 255, 0.8); /* Outer border with same color as text */
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.8);
  /* Optional: clip-path for cutting corners */
  clip-path: polygon(
    0% 0%, 
    calc(100% - 20px) 0%, 
    100% 20px, 
    100% 100%, 
    20px 100%, 
    0% calc(100% - 20px)
  );
}

/* Title and Subtitle */
.title {
  font-size: 24px;
  margin-bottom: 10px;
}

.subtitle {
  font-size: 18px;
  margin-bottom: 20px;
}

/* Form Wrapper */
.form-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Input Wrappers (Text Inputs) */
.input-wrapper {
  position: relative;
  width: 100%;
  margin-bottom: 15px;
  background-color: black;
}

.input-wrapper input {
  width: 100%;
  padding: 10px;
  background: none;
  border: none;
  color: #00ffff;
  outline: none;
  font-size: 14px;
  z-index: 1;
}

.input-wrapper::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 2px solid rgba(0, 255, 255, 0.8);
  clip-path: polygon(
    0% 0%, 
    calc(100% - 15px) 0%, 
    100% 15px, 
    100% 100%, 
    15px 100%, 
    0% calc(100% - 15px)
  );
  pointer-events: none;
}

/* Checkbox Containers */
.checkbox-container {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 15px;
  width: 100%;
}

/* Align the checkboxes vertically */
.checkbox-container, .encryption-display {
  margin-bottom: 10px; /* Ensuring vertical spacing */
}

.checkbox-container input, .encryption-display input {
  margin-right: 8px;
  transform: scale(1.2); /* Enlarging checkbox for better visibility */
}

.checkbox-label {
  color: #00ffff;
  font-size: 14px;
  margin-left: 0;
  line-height: 1.5;
}

/* Login Button */
.login-button {
  position: relative;
  padding: 10px 0;
  width: 100%;
  color: #00ffff; /* Initial text color */
  background: black; /* Button background is black */
  border: 2px solid rgba(0, 255, 255, 0.8); /* Initial border color */
  cursor: pointer;
  text-align: center;
  font-size: 16px;
  transition: background-color 0.3s, color 0.3s; /* Transition for background and text color */
  clip-path: polygon(
    0% 0%, 
    calc(100% - 15px) 0%, 
    100% 15px, 
    100% 100%, 
    15px 100%, 
    0% calc(100% - 15px)
  ); /* Adding diagonal corners to the button */
}

/* Hover Effect for Login Button */
.login-button:hover {
  background-color: rgba(0, 255, 255, 0.1); /* Transparent background when hovering */
  color: #ffffff; /* Change text color to white on hover */
}

/* Login Button Animation (for Success and Failure) */
@keyframes fadeInOut {
  0% { opacity: 1; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}

/* Failure State */
.login-button.failure {
  color: #ff0000; /* Change text color to red */
  border: 2px solid #ff0000; /* Change border to red */
  animation: blinkFailure 1s 5; /* Blink 5 times */
  animation-fill-mode: forwards; /* Keep color after blinking */
  background: black; /* Keep background black */
}

/* Success State */
.login-button.success {
  color: #00ffff; /* Change text color to blue */
  border: 2px solid rgba(0, 255, 255, 0.8); /* Keep blue border */
  background-color: black; /* Keep background black */
  transition: border 0.3s, color 0.3s;
}

/* Failure Button - Animation Duration and Limitations */
@keyframes blinkFailure {
  0% { opacity: 1; }
  20% { opacity: 0; }
  40% { opacity: 1; }
  60% { opacity: 0; }
  80% { opacity: 1; }
  100% { opacity: 0; }
}

/* Apply animation and prevent color change after 5 blink iterations */
.login-button.failure {
  animation: blinkFailure 1s 5; /* Blink 5 times */
  animation-fill-mode: forwards; /* Keep color after blinking */
}

/* Success Text Animation */
@keyframes fadeInSuccess {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

/* Fade in effect for Success state */
.login-button.success {
  animation: fadeInSuccess 0.5s ease-in-out;
}

/* Ensure text resets after 5 flashes */
.login-button.failure.done {
  color: #00ffff; /* Reset text color to blue */
  border: 2px solid rgba(0, 255, 255, 0.8); /* Reset border to blue */
  animation: none; /* Disable blinking animation */
  background-color: black; /* Keep background black */
}
